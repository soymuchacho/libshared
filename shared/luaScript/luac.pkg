
namespace LuaC
{

// 定义lua 64位整数
class CLuaInt64
{
    CLuaInt64();
    CLuaInt64(int a_data);
    CLuaInt64(float a_data);
    CLuaInt64(const CLuaInt64& a_data);
    CLuaInt64(const std::string& a_data);
    ~CLuaInt64();
    
    CLuaInt64 operator +(const CLuaInt64& a_data) const;
	CLuaInt64 operator -(const CLuaInt64& a_data) const;
	CLuaInt64 operator *(const CLuaInt64& a_data) const;
	CLuaInt64 operator /(const CLuaInt64& a_data) const;

	CLuaInt64 operator +(int a_data) const;
	CLuaInt64 operator -(int a_data) const;
	CLuaInt64 operator *(int a_data) const;
	CLuaInt64 operator /(int a_data) const;

	CLuaInt64 operator +(float a_data) const;
	CLuaInt64 operator -(float a_data) const;
	CLuaInt64 operator *(float a_data) const;
	CLuaInt64 operator /(float a_data) const;
	
	bool operator <(const CLuaInt64& a_data) const;
	bool operator <(int a_data) const;
	bool operator <(float a_data) const;

	bool operator <=(const CLuaInt64& a_data) const;
	bool operator <=(int a_data) const;
	bool operator <=(float a_data) const;

	bool operator ==(const CLuaInt64& a_data) const;
	bool operator ==(int a_data) const;
	bool operator ==(float a_data) const;
	
	void setData(int a_data);
    void setData(float a_data);
    void setData(const CLuaInt64& a_data);
	void setData(const std::string& a_data);
	
	// 十进制数出
	std::string toString() const;
	// 'd' 十进制
	// 'h' 十六进制
	// 'o' 八进制
	std::string toString(char a_type) const;
};

class CLuaIntList
{
	CLuaIntList();
	CLuaIntList(int a_size);
	~CLuaIntList();
	
	void clear();
	void addItem(const int& a_item);
	int getSize() const;
	// 下标从0开始
	int operator [](int a_index);
};

class CLuaStringList
{
	CLuaStringList();
	CLuaStringList(int a_size);
	~CLuaStringList();
	
	void clear();
	void addItem(const std::string& a_item);
	int getSize() const;
	// 下标从0开始
	const std::string& operator [](int a_index) const;
	// 下标从0开始
	std::string& operator [](int a_index);
};

void luaLogDebug(std::string& strText);

};
